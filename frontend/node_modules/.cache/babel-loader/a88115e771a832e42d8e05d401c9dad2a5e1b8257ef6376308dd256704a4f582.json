{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user && user.token) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Auth Services\nexport const authService = {\n  register: async (username, password) => {\n    const response = await api.post('/auth/register', {\n      username,\n      password\n    });\n    return response.data;\n  },\n  login: async (username, password) => {\n    const response = await api.post('/auth/login', {\n      username,\n      password\n    });\n    return response.data;\n  }\n};\n\n// Student Services\nexport const studentService = {\n  syncStudents: async () => {\n    const response = await api.get('/students/sync');\n    return response.data;\n  },\n  getStudents: async (filters = {}) => {\n    const params = new URLSearchParams();\n\n    // Add filters to query params\n    if (filters.active !== undefined) {\n      params.append('active', filters.active);\n    }\n    if (filters.course) {\n      params.append('course', filters.course);\n    }\n    if (filters.sortBy) {\n      params.append('sortBy', filters.sortBy);\n      params.append('sortOrder', filters.sortOrder || 'asc');\n    }\n    const response = await api.get(`/students?${params.toString()}`);\n    return response.data;\n  },\n  getStats: async () => {\n    const response = await api.get('/students/stats');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","Authorization","error","Promise","reject","authService","register","username","password","response","post","data","login","studentService","syncStudents","get","getStudents","filters","params","URLSearchParams","active","undefined","append","course","sortBy","sortOrder","toString","getStats"],"sources":["C:/student_data_portal/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.token) {\r\n      config.headers.Authorization = `Bearer ${user.token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth Services\r\nexport const authService = {\r\n  register: async (username, password) => {\r\n    const response = await api.post('/auth/register', { username, password });\r\n    return response.data;\r\n  },\r\n  login: async (username, password) => {\r\n    const response = await api.post('/auth/login', { username, password });\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Student Services\r\nexport const studentService = {\r\n  syncStudents: async () => {\r\n    const response = await api.get('/students/sync');\r\n    return response.data;\r\n  },\r\n  getStudents: async (filters = {}) => {\r\n    const params = new URLSearchParams();\r\n    \r\n    // Add filters to query params\r\n    if (filters.active !== undefined) {\r\n      params.append('active', filters.active);\r\n    }\r\n    if (filters.course) {\r\n      params.append('course', filters.course);\r\n    }\r\n    if (filters.sortBy) {\r\n      params.append('sortBy', filters.sortBy);\r\n      params.append('sortOrder', filters.sortOrder || 'asc');\r\n    }\r\n    \r\n    const response = await api.get(`/students?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n  getStats: async () => {\r\n    const response = await api.get('/students/stats');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,IAAIJ,IAAI,IAAIA,IAAI,CAACK,KAAK,EAAE;IACtBN,MAAM,CAACJ,OAAO,CAACW,aAAa,GAAG,UAAUN,IAAI,CAACK,KAAK,EAAE;EACvD;EACA,OAAON,MAAM;AACf,CAAC,EACAQ,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAG;EACzBC,QAAQ,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACtC,MAAMC,QAAQ,GAAG,MAAMtB,GAAG,CAACuB,IAAI,CAAC,gBAAgB,EAAE;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACzE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EACDC,KAAK,EAAE,MAAAA,CAAOL,QAAQ,EAAEC,QAAQ,KAAK;IACnC,MAAMC,QAAQ,GAAG,MAAMtB,GAAG,CAACuB,IAAI,CAAC,aAAa,EAAE;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACtE,OAAOC,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAG;EAC5BC,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxB,MAAML,QAAQ,GAAG,MAAMtB,GAAG,CAAC4B,GAAG,CAAC,gBAAgB,CAAC;IAChD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EACDK,WAAW,EAAE,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;IACnC,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;;IAEpC;IACA,IAAIF,OAAO,CAACG,MAAM,KAAKC,SAAS,EAAE;MAChCH,MAAM,CAACI,MAAM,CAAC,QAAQ,EAAEL,OAAO,CAACG,MAAM,CAAC;IACzC;IACA,IAAIH,OAAO,CAACM,MAAM,EAAE;MAClBL,MAAM,CAACI,MAAM,CAAC,QAAQ,EAAEL,OAAO,CAACM,MAAM,CAAC;IACzC;IACA,IAAIN,OAAO,CAACO,MAAM,EAAE;MAClBN,MAAM,CAACI,MAAM,CAAC,QAAQ,EAAEL,OAAO,CAACO,MAAM,CAAC;MACvCN,MAAM,CAACI,MAAM,CAAC,WAAW,EAAEL,OAAO,CAACQ,SAAS,IAAI,KAAK,CAAC;IACxD;IAEA,MAAMhB,QAAQ,GAAG,MAAMtB,GAAG,CAAC4B,GAAG,CAAC,aAAaG,MAAM,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC;IAChE,OAAOjB,QAAQ,CAACE,IAAI;EACtB,CAAC;EACDgB,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMlB,QAAQ,GAAG,MAAMtB,GAAG,CAAC4B,GAAG,CAAC,iBAAiB,CAAC;IACjD,OAAON,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}