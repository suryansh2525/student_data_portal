{"ast":null,"code":"var _jsxFileName = \"C:\\\\student_data_portal\\\\frontend\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    // Check if user has a theme preference in localStorage\n    const savedTheme = localStorage.getItem('darkMode');\n    if (savedTheme) {\n      setDarkMode(JSON.parse(savedTheme));\n    } else {\n      // Check if user prefers dark mode at system level\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setDarkMode(prefersDark);\n    }\n\n    // Apply theme to body\n    document.body.className = darkMode ? 'dark-theme' : 'light-theme';\n  }, [darkMode]);\n  const toggleTheme = () => {\n    const newDarkMode = !darkMode;\n    localStorage.setItem('darkMode', JSON.stringify(newDarkMode));\n    setDarkMode(newDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkMode,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"n2P3coCVngntCnyS/Nqj+dgR7+U=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","darkMode","setDarkMode","savedTheme","localStorage","getItem","JSON","parse","prefersDark","window","matchMedia","matches","document","body","className","toggleTheme","newDarkMode","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/student_data_portal/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if user has a theme preference in localStorage\r\n    const savedTheme = localStorage.getItem('darkMode');\r\n    if (savedTheme) {\r\n      setDarkMode(JSON.parse(savedTheme));\r\n    } else {\r\n      // Check if user prefers dark mode at system level\r\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      setDarkMode(prefersDark);\r\n    }\r\n\r\n    // Apply theme to body\r\n    document.body.className = darkMode ? 'dark-theme' : 'light-theme';\r\n  }, [darkMode]);\r\n\r\n  const toggleTheme = () => {\r\n    const newDarkMode = !darkMode;\r\n    localStorage.setItem('darkMode', JSON.stringify(newDarkMode));\r\n    setDarkMode(newDarkMode);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ darkMode, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACnD,IAAIF,UAAU,EAAE;MACdD,WAAW,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACrC,CAAC,MAAM;MACL;MACA,MAAMK,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;MAC7ET,WAAW,CAACM,WAAW,CAAC;IAC1B;;IAEA;IACAI,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGb,QAAQ,GAAG,YAAY,GAAG,aAAa;EACnE,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,WAAW,GAAG,CAACf,QAAQ;IAC7BG,YAAY,CAACa,OAAO,CAAC,UAAU,EAAEX,IAAI,CAACY,SAAS,CAACF,WAAW,CAAC,CAAC;IAC7Dd,WAAW,CAACc,WAAW,CAAC;EAC1B,CAAC;EAED,oBACEpB,OAAA,CAACC,YAAY,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,QAAQ;MAAEc;IAAY,CAAE;IAAAhB,QAAA,EACrDA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACxB,EAAA,CA7BWF,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}